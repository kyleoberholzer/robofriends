{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","React","createElement","className","alt","src","CardList","robots","cardComponent","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","padding","children","App","Component","constructor","super","onSearchChange","event","this","setState","searchField","target","value","state","componentDidMount","fetch","response","json","users","render","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"sMAYeA,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,M,KCSCS,MAbFN,IAAwB,IAAvB,KAACO,EAAI,MAAEC,EAAK,GAAEC,GAAGT,EAC/B,OACIU,IAAAC,cAAA,OAAKC,UAAU,sDACXF,IAAAC,cAAA,OAAKE,IAAI,QAAQC,IAAK,wBAAwBL,IAC9CC,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAKJ,GACLG,IAAAC,cAAA,SAAIH,MCODO,MAbEf,IAAiB,IAAhB,OAAEgB,GAAQhB,EAExB,MAAMiB,EAAiBD,EAAOE,IAAI,CAACC,EAAMC,IAC9BV,IAAAC,cAACL,EAAI,CAACe,IAAOD,EAAGX,GAAMO,EAAOI,GAAGX,GAAIF,KAAQS,EAAOI,GAAGb,KAAMC,MAASQ,EAAOI,GAAGZ,SAG1F,OACIE,IAAAC,cAAA,WACKM,ICIEK,MAbGtB,IAAmC,IAAlC,YAAEuB,EAAW,aAAEC,GAAcxB,EAC5C,OACIU,IAAAC,cAAA,OAAKC,UAAY,OACbF,IAAAC,cAAA,SACAC,UAAY,mCACZa,KAAK,SACLC,YAAY,gBACZC,SAAUH,M,MCCPI,MARCC,GAERnB,IAAAC,cAAA,OAAKmB,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAASC,QAAS,SAC7FL,EAAMM,UCET,MAAMC,UAAYC,YAEdC,cACIC,QAAQ,KAaZC,eAAkBC,IACdC,KAAKC,SAAU,CAAEC,YAAaH,EAAMI,OAAOC,SAb3CJ,KAAKK,MAAQ,CACT/B,OAAQ,GACR4B,YAAa,IAIrBI,oBACIC,MAAM,8CACDlD,KAAKmD,GAAYA,EAASC,QAC1BpD,KAAKqD,IAAUV,KAAKC,SAAS,CAAC3B,OAAQoC,MAO/CC,SACI,MAAM,OAAErC,EAAM,YAAE4B,GAAgBF,KAAKK,MAC/BO,EAAiBtC,EAAOuC,OAAOC,GAC1BA,EAAMjD,KAAKkD,cAAcC,SAASd,EAAYa,gBAEzD,OAAKzC,EAAO2C,OAIJjD,IAAAC,cAAA,OAAKC,UAAU,MACXF,IAAAC,cAAA,MAAIC,UAAY,aAAY,eAC5BF,IAAAC,cAACW,EAAS,CAACE,aAAckB,KAAKF,iBAC9B9B,IAAAC,cAACiB,EAAM,KACPlB,IAAAC,cAACI,EAAQ,CAACC,OAAWsC,MAPtB5C,IAAAC,cAAA,UAAI,eAeRyB,QCxCFwB,IAASC,WAAWC,SAASC,eAAe,SACpDV,OACH3C,IAAAC,cAACD,IAAMsD,WAAU,KAChBtD,IAAAC,cAACyB,EAAG,QAOPxC,K","file":"static/js/main.54832c99.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport 'tachyons';\n\nconst Card = ({name, email, id}) => {\nreturn(\n    <div className=\"bg-light-blue dib br2 pa2 ma1 tc grow bw1 shadow-3\"> \n        <img alt='photo' src={`https://robohash.org/${id}`}/>\n        <div>\n            <h2>{name}</h2>\n            <p>{email}</p>\n        </div>\n    </div>\n)\n}\n//uses tachyons for styling\n\nexport default Card;","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n\n    const cardComponent  = robots.map((user, i) => {\n        return <Card key = {i} id = {robots[i].id} name = {robots[i].name} email = {robots[i].email}/>\n    }) //creates a list of Card elements populated with info from the robots array\n\n    return(\n        <div>\n            {cardComponent}\n        </div>\n    ); //calls the cardComponent function and returns the list of Card elements to index.js\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({ searchfield, searchChange }) =>{\n    return (\n        <div className = 'pa2'>\n            <input \n            className = 'pa3 ba b--green bg-lightest-blue'\n            type='search' \n            placeholder=\"Search Robots\"\n            onChange={searchChange}\n            />\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: 'scroll', border: '1px solid black', height: '800px', padding: '10px' }}>\n  {props.children}\n</div>\n    )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from \"../Components/CardList\";\nimport { robots } from '../Components/robots';\nimport SearchBox from '../Components/SearchBox';\nimport './App.css';\nimport Scroll from '../Components/Scroll';\n\nclass App extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            robots: [],\n            searchField: \"\"\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => {this.setState({robots: users})});\n    }\n\n    onSearchChange = (event) => {\n        this.setState ({ searchField: event.target.value })\n    }\n    \n    render () {\n        const { robots, searchField } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\n        })\n        if (!robots.length){ //checks if robots has a length\n            return <h1>Loading...</h1>\n        } else {\n            return(\n                <div className='tc'>\n                    <h1 className = 'sega-logo'>Robofriends</h1>\n                    <SearchBox searchChange={this.onSearchChange} />\n                    <Scroll>\n                    <CardList robots = { filteredRobots } />\n                    </Scroll>\n                </div>\n            )\n        }\n    }\n}\n\nexport default App; \n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './Containers/App';\n\n \nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}